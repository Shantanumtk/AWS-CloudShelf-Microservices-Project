name: ci-pipeline

on:
  push:
    branches: [ github-actions ]
    paths:
      - '**/*.java'
      - '**/pom.xml'
      - '**/Dockerfile'
      - '.github/workflows/ci-pipeline.yml'
  workflow_dispatch:

env:
  DOCKERHUB_NAMESPACE: shpro123

jobs:
  build-backend-jars:
    name: Maven package (all Java services)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Maven package (skip tests)
        run: mvn -B -DskipTests package

      - name: Upload JARs for downstream jobs
        uses: actions/upload-artifact@v4
        with:
          name: built-jars
          path: |
            discovery-server/target/*.jar
            config-server/target/*.jar
            api-gateway/target/*.jar
            book-service/target/*.jar
            author-service/target/*.jar
            order-service/target/*.jar
            stock-check-service/target/*.jar
            message-service/target/*.jar

  dockerize-backends:
    name: Build & Push backend images
    runs-on: ubuntu-latest
    needs: build-backend-jars
    strategy:
      fail-fast: false
      matrix:
        svc:
          - discovery-server
          - config-server
          - api-gateway
          - book-service
          - author-service
          - order-service
          - stock-check-service
          - message-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore JARs
        uses: actions/download-artifact@v4
        with:
          name: built-jars

      - name: Compute short SHA
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "sha_tag=sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute image name and tags
        id: meta
        run: |
          IMAGE=${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.svc }}
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "tags=${IMAGE}:latest,${IMAGE}:${{ steps.vars.outputs.sha_tag }}" >> $GITHUB_OUTPUT

      - name: Build & Push ${{ matrix.svc }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.svc }}
          file: ./${{ matrix.svc }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.image }}:buildcache,mode=max
