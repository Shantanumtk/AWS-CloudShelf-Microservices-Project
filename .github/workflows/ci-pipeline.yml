name: ci-pipeline

on:
  push:
    branches: [ github-actions ]
    paths:
      - 'spring-microservices-bookstore-demo/**'
      - '.github/workflows/ci-pipeline.yml'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKERHUB_NAMESPACE: shpro123

jobs:
  dockerize-backends:
    name: Build & Push backend images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        svc:
          - discovery-server
          - config-server
          - api-gateway
          - book-service
          - author-service
          - order-service
          - stock-check-service
          - message-service

    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Validate service paths exist
        run: |
          root="spring-microservices-bookstore-demo"
          svc="${{ matrix.svc }}"
          test -f "$root/$svc/Dockerfile" || { echo "Missing $root/$svc/Dockerfile"; exit 1; }
          test -f "$root/$svc/pom.xml"    || { echo "Missing $root/$svc/pom.xml"; exit 1; }
          test -d "$root/$svc/src"        || { echo "Missing $root/$svc/src/"; exit 1; }
          echo "Paths OK for $svc"

      - name: Compute tags
        id: vars
        run: |
          short_sha="${GITHUB_SHA::7}"
          echo "short_sha=$short_sha" >> "$GITHUB_OUTPUT"
          echo "image=${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.svc }}" >> "$GITHUB_OUTPUT"
          echo "tags=${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.svc }}:latest,${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.svc }}:sha-${short_sha}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.svc }}
        uses: docker/build-push-action@v6
        with:
          # IMPORTANT: Dockerfiles copy from the repo subfolder root
          context: ./spring-microservices-bookstore-demo
          file: ./spring-microservices-bookstore-demo/${{ matrix.svc }}/Dockerfile
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache,mode=max
